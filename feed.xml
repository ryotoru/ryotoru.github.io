<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ryotoru.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ryotoru.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-08-24T13:18:06+00:00</updated><id>https://ryotoru.github.io/feed.xml</id><title type="html">CryptiCosmos- Lattice Cryptography and more</title><entry><title type="html">Introduction to Lattices and Learning With Errors</title><link href="https://ryotoru.github.io/blog/2024/math/" rel="alternate" type="text/html" title="Introduction to Lattices and Learning With Errors"/><published>2024-07-12T15:12:00+00:00</published><updated>2024-07-12T15:12:00+00:00</updated><id>https://ryotoru.github.io/blog/2024/math</id><content type="html" xml:base="https://ryotoru.github.io/blog/2024/math/"><![CDATA[<p>Imagine waking up one day to find that all your online passwords, secure connections, and encrypted data are suddenly vulnerable. This isn’t the plot of a sci-fi movie – it’s a real concern in the world of cybersecurity. In the world of cryptography, a seismic shift is underway. The looming advent of quantum computers threatens to break many of our current encryption methods, pushing researchers to develop new, quantum-resistant cryptographic systems. At the forefront of this effort are lattice-based cryptographic schemes, with the Learning With Errors (LWE) problem as a cornerstone.</p> <p>In this series of occasional, brief posts, I will be sharing my notes on the topic. Here are some of the topics I plan to cover (hopefully someday!):</p> <ol> <li>Lattices and their properties</li> <li>Hard problems on lattices like SVP, CVP, BDD, GAP versions etc.</li> <li>Usage in cryptography</li> <li>SIS and LWE</li> <li>Worst case to average case reductions (at least classical one)</li> <li>Cryptosystems based on LWE</li> <li>NIST Candidates</li> <li>CRYSTALS suite (at least brief mention of their working)</li> </ol> <p>From here, two paths emerge: Fully Homomorphic Encryption (FHE), the holy grail of cryptography; or Complexity Theory, exploring why these problems are considered “hard”. Currently, my focus is on FHE.</p> <p>Point to Note: I have been studying lattices since February last year. These blogs are my personal notes and reflections on my understanding so far. Mistakes are inevitable, as learning is a continuous journey. If you spot any inaccuracies or have suggestions, please feel free to educate me. We are all students of this vast and intricate matrix.</p> <p>Before we go further, here is a lattice visualizer tool I made to play around and see the lattice points. Have fun!</p> <iframe src="https://ryotoru.github.io/lattice-visualizer/" width="1024" height="768"></iframe> <h2 id="traditional-cryptography-rsa-and-diffie-hellman">Traditional Cryptography: RSA and Diffie-Hellman</h2> <p>Currently, most of the cryptography used in our daily lives relies on protocols like RSA and Diffie-Hellman. RSA RSA is based on the mathematical assumption that factoring a very large number into its prime factors is computationally difficult. This hardness is what secures RSA encryption, making it feasible to encrypt data with a public key while only the corresponding private key, which is derived from these prime factors, can decrypt it. Diffie-Hellman Diffie-Hellman is based on the discrete logarithm problem. This problem assumes that given a number $y$, which is calculated as: \(y = g^x \mod p\) where $g$ is a generator, $x$ is an exponent, and $p$ is a prime number, it is computationally hard to determine the value of $x$. In simpler terms, while it is easy to compute $y$ from $g$, $x$, and $p$, it is very difficult to reverse this process and find $x$ given only $g$, $y$, and $p$. This discrete logarithm problem underlies the security of the Diffie-Hellman key exchange protocol, which allows two parties to securely share a common secret over an insecure channel without having prior knowledge of each other’s private keys. Both RSA and Diffie-Hellman are fundamental to many encryption systems used in securing internet communications, digital signatures, and more.</p> <h2 id="the-quantum-threat-shors-algorithm">The Quantum Threat: Shor’s Algorithm</h2> <p>In 1994, Peter Shor developed a quantum algorithm that efficiently solves integer factorization and discrete logarithm problems. This breakthrough poses a significant threat to widely used cryptographic protocols:</p> <ol> <li><strong>RSA</strong>: Based on the difficulty of factoring large numbers.</li> <li><strong>Diffie-Hellman key exchange</strong>: Relies on the discrete logarithm problem.</li> <li><strong>Elliptic Curve Cryptography (ECC)</strong>: The elliptic curve discrete logarithm problem can be solved efficiently.</li> </ol> <p>Once large-scale quantum computers become a reality, these protocols will be effectively broken, compromising much of our current digital security infrastructure.</p> <h2 id="enter-lattices-a-quantum-resistant-foundation">Enter Lattices: A Quantum-Resistant Foundation</h2> <p>This is where lattices come into play. In mathematics, a lattice is a regularly spaced grid of points stretching out to infinity. Imagine a vast checkerboard extending in all directions. These structures turn out to have some fascinating properties that make them excellent building blocks for post-quantum cryptography.</p> <p>To understand lattices mathematically, think of a pattern of points in space that repeats infinitely. Imagine a grid where every point is equally spaced from its neighbors, extending in all directions forever. To describe this mathematically, we need:</p> <ol> <li>A starting point (usually the origin, or (0,0,0) in 3D space)</li> <li>A set of directions that tell us how to move from one point to another</li> </ol> <p>These directions are called “basis vectors”. They’re like the fundamental building blocks of our lattice. Every point in the lattice can be reached by following these directions in different combinations. Here’s a more formal definition:</p> <p>A lattice is the set of all points that can be reached by:</p> <p>a) Starting at the origin b) Moving along the basis vectors c) Using only whole number multiples of these vectors</p> <p>A lattice in \(\mathbb{R}^n\) is formally defined as the set:</p> <p>\(L(b_1, ..., b_n)\) = \(\left\{ \sum_{i=1}^n x_i b_i : x_i \in \mathbb{Z} \right\}\)</p> <p>Where \((b_1, ..., b_n)\) are linearly independent vectors in \(\mathbb{R}^n\).</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/A_visual_representation_of_a_lattice_in_a_3-dimens-480.webp 480w,/assets/img/A_visual_representation_of_a_lattice_in_a_3-dimens-800.webp 800w,/assets/img/A_visual_representation_of_a_lattice_in_a_3-dimens-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/A_visual_representation_of_a_lattice_in_a_3-dimens.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A visual representaion of a lattice in a 3-D space. (image generated using Dall-E) </div> <h2 id="ajtais-seminal-work-a-cryptographic-breakthrough">Ajtai’s Seminal Work: A Cryptographic Breakthrough</h2> <p>In 1996, Miklós Ajtai made a groundbreaking discovery that revolutionized the field of cryptography. He demonstrated a connection between the average-case complexity of certain lattice problems and their worst-case complexity.</p> <p>This result was seminal for cryptography for several reasons:</p> <ol> <li>It provided a theoretical foundation for the security of lattice-based cryptosystems.</li> <li>It showed that solving random instances of certain lattice problems is as hard as solving the hardest instances of these problems.</li> <li>It opened the door for creating cryptographic schemes based on well-studied mathematical problems.</li> </ol> <p>Ajtai’s work laid the groundwork for developing cryptographic systems that are believed to be secure even against quantum computers.</p> <h2 id="key-concepts-in-lattice-based-cryptography">Key Concepts in Lattice-Based Cryptography</h2> <ol> <li> <p><strong>Dual Lattice</strong>: For every lattice (\Lambda), there’s a dual lattice (\Lambda^*) defined as:</p> <p>[ \Lambda^* = \left{ y \in \mathbb{R}^n : \langle x, y \rangle \in \mathbb{Z} \text{ for all } x \in \Lambda \right} ]</p> </li> <li> <p><strong>Discrete Gaussian Distribution</strong>: This distribution, denoted (D_{\Lambda, t}), assigns probability mass proportional to (e^{-\pi |x/t|^2}) to each point (x \in \Lambda).</p> </li> <li> <p><strong>Fundamental Parallelepiped and Lattice Determinant</strong>: For a matrix (B), the fundamental parallelepiped (P(B)) is defined as:</p> <p>[ P(B) = { Bx : x \in [0, 1)^n } ]</p> <table> <tbody> <tr> <td>The determinant of a lattice (L(B)) is ( \det(L) =</td> <td>\det(B)</td> <td>).</td> </tr> </tbody> </table> </li> <li> <p><strong>Minkowski’s Theorems</strong>: These provide important bounds on lattice vectors and volumes.</p> </li> <li> <p><strong>Computational Problems</strong>:</p> <ul> <li><strong>Shortest Vector Problem (SVP)</strong>: Find the shortest non-zero vector in a lattice.</li> <li><strong>Closest Vector Problem (CVP)</strong>: Find the closest lattice vector to a given point.</li> </ul> <p>These problems are believed to be hard for both classical and quantum computers, forming the basis for lattice-based cryptography. I will delve deeper into these in the next post. &lt;!– // ## Learning With Errors (LWE)</p> </li> </ol> <p>LWE, introduced by Oded Regev in 2005, has become a cornerstone of lattice-based cryptography. It involves solving a system of linear equations with added noise.</p> <p>The LWE problem is defined by parameters \(n\) is the dimension of the lattice, \(q\) is the modulus, and an error distribution \(\chi\). Given a secret vector \(r \in\) \(\mathbb{Z}_q^n\), LWE samples are of the form:</p> \[(a, b = \langle r, a \rangle + e \mod q)\] <p>Where \(a\) is chosen uniformly from \(\mathbb{Z}_q^n\) and \(e\) is chosen from \(\chi\).</p> <p>Here’s a simple Python representation of LWE sample generation:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">python
</span><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="k">def</span> <span class="nf">generate_lwe_sample</span><span class="p">(</span><span class="n">secret</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="n">error_distribution</span><span class="p">):</span>
    <span class="n">n</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">secret</span><span class="p">)</span>
    <span class="n">a</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
    <span class="n">e</span> <span class="o">=</span> <span class="n">error_distribution</span><span class="p">.</span><span class="nf">sample</span><span class="p">()</span>
    <span class="n">b</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">dot</span><span class="p">(</span><span class="n">secret</span><span class="p">,</span> <span class="n">a</span><span class="p">)</span> <span class="o">+</span> <span class="n">e</span><span class="p">)</span> <span class="o">%</span> <span class="n">q</span>
    <span class="k">return</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span>

<span class="c1"># Usage
</span><span class="n">n</span> <span class="o">=</span> <span class="mi">256</span>
<span class="n">q</span> <span class="o">=</span> <span class="mi">7681</span>
<span class="n">secret</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="n">n</span><span class="p">)</span>
<span class="c1"># error_distribution would be an object representing the error distribution χ
</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="nf">generate_lwe_sample</span><span class="p">(</span><span class="n">secret</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="n">error_distribution</span><span class="p">)</span>

</code></pre></div></div> <p>// ## LWE: The Building Block for Advanced Cryptographic Constructions</p> <p>LWE has proven to be incredibly versatile, serving as the foundation for numerous advanced cryptographic constructions:</p> <ol> <li> <p><strong>Fully Homomorphic Encryption (FHE)</strong>: Often called the “Holy Grail” of cryptography, FHE allows computations to be performed on encrypted data without decrypting it. This has enormous implications for cloud computing and data privacy.</p> </li> <li> <p><strong>CRYSTALS-Kyber</strong>: A post-quantum key encapsulation mechanism (KEM) based on the hardness of solving the LWE problem in module lattices. It’s one of the finalists in NIST’s post-quantum cryptography standardization process.</p> </li> <li> <p><strong>CRYSTALS-Dilithium</strong>: A post-quantum digital signature algorithm, also based on module lattices. Like Kyber, it’s a finalist in NIST’s standardization process.</p> </li> </ol> <p>These schemes represent the cutting edge of post-quantum cryptography, offering strong security guarantees even in the face of quantum attacks.</p> <p>// ## Conclusion</p> <p>As we stand on the brink of the quantum computing era, lattice-based cryptography, powered by problems like LWE, offers a promising path forward. From Ajtai’s seminal work to the development of advanced schemes like FHE and the CRYSTALS suite, lattices have proven to be a robust foundation for cryptography in the post-quantum world.</p> <p>While the underlying mathematics can be complex, the core idea is simple: we’re building our digital security on problems that even quantum computers find challenging. As research continues, lattice-based cryptography may well become the bulwark that protects our digital lives in the quantum age.</p> <p>–&gt;</p>]]></content><author><name></name></author><category term="posts"/><category term="lattices,"/><category term="post-quantum,"/><category term="cryptography"/><summary type="html"><![CDATA[A comprehensive introduction to lattice-based cryptography.]]></summary></entry></feed>